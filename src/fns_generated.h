#pragma once
#include "hll_common.h"
/*
 * External definitions used by compiled trck program. They are opaque for
 * generated code.
 */
typedef void * set_t;
typedef struct ctx_t ctx_t;
typedef struct db_t db_t;

/*
 * These structures are generated by the trck compiler. They are opaque for
 * non-generated code.
 */
typedef struct kvids_t kvids_t;
typedef struct results_t results_t;
typedef struct state_t state_t;


/*
 ******************************************************************************
 *          All functions below are generated by the trck compiler.           *
 ******************************************************************************
 */

/*
 * Run state machine given initial state and results. kvids_t contains mapping
 * from field names and value literals to db-specific value and field ids.
 */
int match_trail(state_t *pstate, results_t *results, kvids_t *pids, ctx_t *ctx);

/*
 * Initialize matcher state.
 */
void match_trail_init(state_t *state);

/*
 * Check if given state is equal to the initial (default) one.
 */
bool match_is_initial_state(state_t *state);

/*
 * Check if two states are the same.
 */
bool match_same_state(state_t *a, state_t *b);

/*
 * Initalize kvids_t for this database.
 */
void match_db_init(kvids_t *ids, db_t *db);

/*
 * Free kvids_t
 */
void match_free_params(kvids_t *ids);

/*
 * Serialize result structure, which is opaque outside compiled state machine
 * code, given callbacks to save integer/set/multiset values.
 */
void match_save_result(results_t *results, void *arg,
					   void (*save_int)(void *, char *, int64_t),
                       void (*save_set)(void *, char *, set_t *),
                       void (*save_multiset)(void *, char *, set_t *),
                       void (*save_hll)(void *, char *, hyperloglog_t *));
/*
 * Get the size of result_t structure in bytes.
 */
size_t match_get_result_size();

/*
 * Getting and setting state machine parameters, that is foreach variables and
 * parameters passed from outside.
 */
int match_get_param_id(const char *param);
int match_set_param(int param_id, int value, kvids_t *ids);
int match_set_list_param(int param_id, Pvoid_t value, kvids_t *ids);
char *match_get_param_field(int param_id);

